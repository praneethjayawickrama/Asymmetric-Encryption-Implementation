/*
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package asym;

import java.io.File;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.HashSet;
import java.util.Set;
import javax.crypto.BadPaddingException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author praneethjayawickrama
 */
public class Main extends javax.swing.JFrame {

  
    public Main() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        label1 = new java.awt.Label();
        btn_keygen = new javax.swing.JButton();
        btn_encrypt = new javax.swing.JButton();
        btn_browse = new javax.swing.JButton();
        txt_keypath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_input = new javax.swing.JTextArea();
        btn_decrypt = new javax.swing.JButton();
        enc_priv = new javax.swing.JRadioButton();
        enc_pub = new javax.swing.JRadioButton();
        dec_priv = new javax.swing.JRadioButton();
        dec_pub = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_output = new javax.swing.JTextArea();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();

        label1.setText("label1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_keygen.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 13)); // NOI18N
        btn_keygen.setText("Enter to Generate Key Pair");
        btn_keygen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keygenActionPerformed(evt);
            }
        });

        btn_encrypt.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 13)); // NOI18N
        btn_encrypt.setText("Encrypt");
        btn_encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_encryptActionPerformed(evt);
            }
        });

        btn_browse.setText("Browse");
        btn_browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_browseActionPerformed(evt);
            }
        });

        txt_keypath.setEditable(false);
        txt_keypath.setText("KeyPair\\");

            jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
            jLabel1.setText("Choose Key Path :");

            jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
            jLabel2.setText("Plain Text :");

            txt_input.setColumns(20);
            txt_input.setRows(5);
            jScrollPane1.setViewportView(txt_input);

            btn_decrypt.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 13)); // NOI18N
            btn_decrypt.setText("Decrypt");
            btn_decrypt.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btn_decryptActionPerformed(evt);
                }
            });

            buttonGroup1.add(enc_priv);
            enc_priv.setSelected(true);
            enc_priv.setText("Private Key");

            buttonGroup1.add(enc_pub);
            enc_pub.setText("Public Key");

            buttonGroup2.add(dec_priv);
            dec_priv.setText("Private Key");

            buttonGroup2.add(dec_pub);
            dec_pub.setSelected(true);
            dec_pub.setText("Public Key");

            txt_output.setEditable(false);
            txt_output.setColumns(20);
            txt_output.setRows(5);
            txt_output.setWrapStyleWord(true);
            txt_output.setOpaque(false);
            jScrollPane2.setViewportView(txt_output);

            label2.setFont(new java.awt.Font("Bangla MN", 1, 24)); // NOI18N
            label2.setText("Encryption and Decryption Tool");

            label3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 13)); // NOI18N
            label3.setText("Encryption/Decryption :");

            label4.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
            label4.setText("(Asymmetric Encryption)");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(42, 42, 42)
                                            .addComponent(btn_keygen, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addGap(6, 6, 6)
                                                    .addComponent(txt_keypath, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btn_browse))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(41, 41, 41)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(enc_priv)
                                                .addComponent(enc_pub))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btn_encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(dec_priv)
                                                .addComponent(dec_pub))
                                            .addGap(18, 18, 18)
                                            .addComponent(btn_decrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1)
                                        .addComponent(jScrollPane2)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(231, 231, 231)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(261, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(2, 2, 2)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txt_keypath, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_browse))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btn_keygen, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(enc_priv)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(enc_pub))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(dec_priv)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dec_pub))
                                .addComponent(btn_decrypt, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                                .addComponent(btn_encrypt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(22, 22, 22))))
            );

            label4.getAccessibleContext().setAccessibleName("Label4");

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btn_keygenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keygenActionPerformed

        if(txt_keypath.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Select the path to generate the keys");
        }
        else{
            String path_pub = txt_keypath.getText() + "/publicKey";
            String path_priv = txt_keypath.getText() + "/privateKey";
            File f1 = new File(path_pub);
            File f2 = new File(path_priv);
            int file_exist = -1;
            if(f1.exists() || f2.exists())
            {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                file_exist = JOptionPane.showConfirmDialog (null, "Private key or Public key is already existing in the path. Do you want to overwrite it?","Warning",dialogButton);
                if(file_exist == JOptionPane.YES_OPTION){
                    
                }
            }
            if(file_exist == -1 || file_exist == 0){

                GenerateKeys gk;
                try {
                    gk = new GenerateKeys(1024);
                    gk.createKeys();
                    gk.writeToFile(path_pub, gk.getPublicKey().getEncoded());
                    gk.writeToFile(path_priv, gk.getPrivateKey().getEncoded());
                    JOptionPane.showMessageDialog(null, "Key Pair Generation Successfull");
                }
                catch (NoSuchAlgorithmException | NoSuchProviderException e) {
                    System.err.println(e.getMessage());
                }
                catch (IOException e) {
                    System.err.println(e.getMessage());
                }
                catch (Exception e) {
                    System.err.println(e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btn_keygenActionPerformed

    private void btn_encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_encryptActionPerformed
 
        
        try{

            Crypto ac = new Crypto();
            String path_pub = txt_keypath.getText() + "/privateKey";
            String path_priv = txt_keypath.getText() + "/publicKey";
            File f1 = new File(path_pub);
            File f2 = new File(path_priv);
            if(!f1.exists() || !f2.exists())
            {
                JOptionPane.showMessageDialog(null, "Private key or Public key not exist in the given path. Generate the key pair");
            }
            else{
                String msg = txt_input.getText();
                if(enc_priv.isSelected())
                {
                    PrivateKey privateKey = ac.getPrivate(path_pub);
                    String encrypted_msg = ac.encryptText(msg, privateKey);
                    txt_output.setText(encrypted_msg);
                }
                else if(enc_pub.isSelected())
                {
                    PublicKey publicKey = ac.getPublic(path_priv);
                    String encrypted_msg = ac.encryptText(msg, publicKey);
                    txt_output.setText(encrypted_msg);
                }
                /*
                if (new File("KeyPair/text.txt").exists()) {
                    ac.encryptFile(ac.getFileInBytes(new File("KeyPair/text.txt")),
                            new File("KeyPair/text_encrypted.txt"),privateKey);
                    ac.decryptFile(ac.getFileInBytes(new File("KeyPair/text_encrypted.txt")),
                            new File("KeyPair/text_decrypted.txt"), publicKey);
                } else {
                    System.out.println("Create a file text.txt under folder KeyPair");
                }
                */
            }
        }
        catch(Exception ex){
            System.err.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_encryptActionPerformed

    private void btn_browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_browseActionPerformed

        JFileChooser fileChooser = new JFileChooser();
 
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
 
        fileChooser.setAcceptAllFileFilterUsed(false);
 
        int rVal = fileChooser.showOpenDialog(null);
        if (rVal == JFileChooser.APPROVE_OPTION) {
          txt_keypath.setText(fileChooser.getSelectedFile().toString());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_browseActionPerformed

    private void btn_decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_decryptActionPerformed

        try{

            Crypto ac = new Crypto();
            String path_pub = txt_keypath.getText() + "/privateKey";
            String path_priv = txt_keypath.getText() + "/publicKey";
            File f1 = new File(path_pub);
            File f2 = new File(path_priv);
            if(!f1.exists() || !f2.exists())
            {
                JOptionPane.showMessageDialog(null, "Private key or Public key not exist in the given path. Generate the key pair");
            }
            else{
                String msg = txt_output.getText();
                if(dec_priv.isSelected())
                {
                    PrivateKey privateKey = ac.getPrivate(path_pub);
                    String decrypted_msg = ac.decryptText(msg, privateKey);
                    txt_output.setText(decrypted_msg);
                }
                else if(dec_pub.isSelected())
                {
                    PublicKey publicKey = ac.getPublic(path_priv);
                    String decrypted_msg = ac.decryptText(msg, publicKey);
                    txt_output.setText(decrypted_msg);
                }
            }
        }
        catch(BadPaddingException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_decryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_browse;
    private javax.swing.JButton btn_decrypt;
    private javax.swing.JButton btn_encrypt;
    private javax.swing.JButton btn_keygen;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton dec_priv;
    private javax.swing.JRadioButton dec_pub;
    private javax.swing.JRadioButton enc_priv;
    private javax.swing.JRadioButton enc_pub;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private javax.swing.JTextArea txt_input;
    private javax.swing.JTextField txt_keypath;
    private javax.swing.JTextArea txt_output;
    // End of variables declaration//GEN-END:variables
}
